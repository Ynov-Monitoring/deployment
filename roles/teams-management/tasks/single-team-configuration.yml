---
- name: rename vars
  set_fact: 
    team: "{{ item }}"

- name: Create user for team "{{ team.project }}"
  uri:
    url: "http://{{ grafana_ip }}:{{ grafana_expose_port }}/api/admin/users"
    user: "{{ grafana_admin }}"
    password: "{{ grafana_admin_pass }}"
    method: POST
    body: >
      {
        "name":"{{ team.project }}",
        "email":"{{ team.email }}",
        "login":"{{ team.user }}",
        "password":"{{ team.password }}",
        "OrgId": 1
      }
    force_basic_auth: yes
    body_format: json
  register: api_user_result
  failed_when: api_user_result.status not in [200, 412]
  changed_when: api_user_result.status == 200

- name: Get "{{ team.user }}" id
  uri:
    url: "http://{{ grafana_ip }}:{{ grafana_expose_port }}/api/users/lookup?loginOrEmail={{ team.user }}"
    user: "{{ grafana_admin }}"
    password: "{{ grafana_admin_pass }}"
    method: GET
    force_basic_auth: yes
  register: api_user_result
  failed_when: api_user_result.status != 200

- name: Create team named {{ team.project }}
  uri: 
    url: "http://{{ grafana_ip }}:{{ grafana_expose_port }}/api/teams"
    user: "{{ grafana_admin }}"
    password: "{{ grafana_admin_pass }}"
    method: POST
    body: >
      {
        "name": "{{ team.project }}",
      }

    force_basic_auth: yes
    body_format: json
  register: api_team_result
  failed_when: api_team_result.status not in [200, 409]
  changed_when: api_team_result.status == 200

- name: Get {{ team.project }} id
  uri: 
    url: "http://{{ grafana_ip }}:{{ grafana_expose_port }}/api/teams/search?name={{ team.project | replace(' ', '%20') }}"
    user: "{{ grafana_admin }}"
    password: "{{ grafana_admin_pass }}"
    method: GET
    force_basic_auth: yes
  register: api_team_result
  failed_when: api_team_result.status != 200

- name: Add {{ team.user }} to team {{ team.project }}
  uri: 
    url: "http://{{ grafana_ip }}:{{ grafana_expose_port }}/api/teams/{{ api_team_result.json.teams[0].id }}/members"
    user: "{{ grafana_admin }}"
    password: "{{ grafana_admin_pass }}"
    method: POST
    body: >
      {
        "userId": {{ api_user_result.json.id }}
      }

    body_format: json
    force_basic_auth: yes
  register: api_addUserToTeam_result
  failed_when: api_addUserToTeam_result.status not in [200, 400]
  changed_when: api_addUserToTeam_result.status == 200

- name: Create folder
  uri:
    url: "http://{{ grafana_ip }}:{{ grafana_expose_port }}/api/folders"
    user: "{{ grafana_admin }}"
    password: "{{ grafana_admin_pass }}"
    method: POST
    body: >
      {
        "uid": "{{ team.project | lower | replace(' ', '_') }}",
        "title": "{{ team.project }}"
      }

    force_basic_auth: yes
    body_format: json
  register: api_folder_result
  failed_when: api_folder_result.status not in [200, 412, 400] # A vérifier 
  changed_when: api_folder_result.status == 200

- name: Configuration folder ACL
  uri: 
    url: "http://{{ grafana_ip }}:{{ grafana_expose_port }}/api/folders/{{ team.project | lower | replace(' ', '_') }}/permissions"
    user: "{{ grafana_admin }}"
    password: "{{ grafana_admin_pass }}"
    method: POST
    body: >
      {
        "items": [
          {
            "userId":0,
            "teamId": {{ api_team_result.json.teams[0].id }},
            "permission":1
          }
        ]
      }

    force_basic_auth: yes
    body_format: json
  register: api_folder_perm_result
  failed_when: api_folder_perm_result.status != 200
  changed_when: api_folder_perm_result.status == 200

# - name: Create a team
#   community.grafana.grafana_team:
#     url: "http://192.168.50.33:3000"
#     grafana_api_key: "{{ grafana_api }}"
#     name: "{{ item.name }}"
#     email: "foo.bar@example.com"
#     state: present

# - name: create user
#   debug:
#     msg: J'ai créer l'utilisateur {{ item.name }}

# - name: create le dossier
#   debug:
#     msg: J'ai créer le dossier {{ item.name }}

# - name:  Dashboard
#   vars:
#     dashboard: "{{ item }}"
#     team: "{{ team }}"
#   template:
#     src: dashboard/bar.json.j2
#     dest: "/tmp/bar_{{ item.name }}_{{ team.name | lower }}.json"
#   with_items: "{{ team.dashboard }}"

# - name: Import Test dashboard
#   uri:
#     url: http://admin:adminpass@192.168.50.33:3000/api/dashboards/db
#     # user: admin
#     # password: adminpass
#     body: "{{ lookup('file','/tmp/bar_{{ item.name }}_{{ team.name | lower }}.json') }}"
#     force_basic_auth: yes
#     method: POST
#     status_code: 200
#     headers:
#       Content-Type: application/json
#     body_format: json
#   with_items: "{{ team.dashboard }}"
